(load "lib.scm")

(define (get-code-table)
  (define port (open-input-file "data/code-table"))
  (define code-table (read port))
  (close-input-port port)
  code-table)

(define (save-code-table code-table)
  (display-to-file code-table "data/code-table"))

(define (look-code-table)
  (display-ln (get-code-table)))

(define (add-code)
  (define algorithm (read-with-display "Algorithm: "))
  (define language (read-with-display "Language: "))
  (define code (string-append algorithm "-" language))
  (define code-table (get-code-table))
  (define algorithm-list (car code-table))
  (define language-list (cadr code-table))
  (define code-list (caddr code-table))
  (list-add-if-not-exists! algorithm-list algorithm)
  (list-add-if-not-exists! language-list language)
  (list-add-if-not-exists! code-list code)
  (save-code-table (list algorithm-list language-list code-list)))

(define (del-code)
  (define algorithm (read-with-display "Algorithm: "))
  (define language (read-with-display "Language: "))
  (define code (string-append algorithm "-" language))
  (define code-table (get-code-table))
  (define algorithm-list (car code-table))
  (define language-list (cadr code-table))
  (define code-list (caddr code-table))
  (list-del-if-exists! code-list code)
  (save-code-table (list algorithm-list language-list code-list)))

(define (make-code-table)
  (make-md-table (get-code-table) "data/md/code-table.md"))

(define (make-index)
  (define model (read-all-from-file "data/md/model.md"))
  (define code-table (read-all-from-file "data/md/code-table.md"))
  (define index (string-replace model "(code-table)" code-table))
  (display-to-file index "../index.md"))

(do ([mark #f])
    (mark '())
  (display-ln "有这些命令：")
  (display-ln "\tlook\tlook-code-table")
  (display-ln "\tadd\tadd-code")
  (display-ln "\tdel\tdel-code")
  (display-ln "\tmake\tmake-code-table")
  (display-ln "\tmake-index")
  (display-ln "\texit")
  (display "你要调用哪个命令，请输入：")
  (case (read)
    ('look (look-code-table))
    ('look-code-table (look-code-table))
    ('add (add-code))
    ('add-code (add-code))
    ('del (del-code))
    ('del-code (del-code))
    ('make (make-code-table))
    ('make-code-table (make-code-table))
    ('make-index (make-index))
    ('exit (set! mark #t)))
  (newline))

(exit)