= 搁置原因 =
当前资料过少。
等高质量资料到了grep hold不住的时候（估计100篇？），再开始搭建上层结构。
现在的上层结构，不需要搭建，偶尔需要就写篇文章整理一下即可。

----

= [[计算机科学与技术]] =


== 目录 ==
# [[基础知识]]
    # [[数学]]
        # 微积分
        # 线性代数
        # 概率论
    # [[计算机]]
        # 数据结构
        # 计算机组成
        # 操作系统
        # 编译原理
        # 计算机网络
    # 编程语言
    # 软件工程
# 领域知识
    # 游戏
    # 后端
    # 机器学习
    # TODO
# [[碎片知识]]
    # 调试
    # 工具
    # 检索信息
    # 开源文化
    # 版本管理


----

== 开发白板 ==
`cat index.wiki| grep -n -B 4 '\[\ \]\|TODO'`


== 设计开发思路 ==
这是一次知识结构整理的尝试，站在之前几次失败的肩膀上。

在我看来，整理知识结构的关键有以下几点：
1. 要有一个理论上无懈可击的顶层目录结构
    - [X] 本次整理，选用了知乎一个回答的目录结构，感谢：https://www.zhihu.com/question/68571487
2. 每个知识点都可以迅速定位到指定一篇文章中，加入、更新、退出一气呵成
    - [X] vimwiki的主页目录帮助回忆
    - [X] 通过名字直接链接进去来快速定位
    - [X] 每篇文章分别维护来保证独立性
    - [ ] 扩展vimwiki快捷键来更新对应一条线的目录、所有文章中对应关键字的链接
3. 每个知识点的增删改都不能破坏目录结构的可维护性，这就要求目录结构本身包容性强，而且具备一定的透明更新能力（即无意间的更新）
    - [X] 顶层目录以顶层眼光来设计，不碰细节内容
    - [ ] 底层全都用单层平铺的方式来组织，没有目录结构也就相当于有了自动维护的能力
4. 拥有精心设计的图谱页面，供多种不同的检索需求
    - [X] 首页目录供全景观察、回忆
    - [ ] 领域目录供单领域知识体系梳理、更新、定位
    - TODO


== 约定 ==
1. 一切设计与约定都必须在[[index|主页]]写明，以便保证设计的统一与不遗漏，因此，哪怕是局部内容，也必须在主页中提供链接
2. 所有未完待续的地方只有两种标记方法，以便通过`grep`方便地检索：
    1. 用`TODO`来标记
    2. 用`[ ]`来标记
3. 文章是否有内容，用加不加链接来标记，以便全局文章链接的自动维护：
    1. 所有加了链接的文章都必须有内容
    2. 没加的则一定没有内容
